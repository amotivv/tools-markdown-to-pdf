---
---

<div class="flex flex-col gap-4 p-4 bg-white border-l border-gray-200">
  <div class="flex flex-col gap-2">
    <label class="text-sm font-medium text-gray-700">Paper Size</label>
    <select id="paperSize" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
      <option value="a4">A4</option>
      <option value="letter">Letter</option>
      <option value="legal">Legal</option>
    </select>
  </div>

  <div class="flex flex-col gap-2">
    <label class="text-sm font-medium text-gray-700">Margins</label>
    <select id="margins" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
      <option value="normal">Normal</option>
      <option value="narrow">Narrow</option>
      <option value="wide">Wide</option>
    </select>
  </div>

  <div class="flex items-center gap-2">
    <input type="checkbox" id="includeToC" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
    <label for="includeToC" class="text-sm font-medium text-gray-700">Include Table of Contents</label>
  </div>

  <div class="flex items-center gap-2">
    <input type="checkbox" id="pageNumbers" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
    <label for="pageNumbers" class="text-sm font-medium text-gray-700">Page Numbers</label>
  </div>

  <button id="generatePDF" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
    <svg class="h-5 w-5 mr-2" viewBox="0 0 24 24"><path fill="currentColor" d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 16H5V5h14v14m-2-2H7v-1h10v1m0-3H7v-1h10v1m0-3H7V7h10v4Z"/></svg>
    Generate PDF
  </button>
</div>

<!-- Hidden preview container -->
<div id="preview" class="hidden prose max-w-none p-8 bg-white"></div>

<script>
  import type { HighlightResult } from 'highlight.js';
  import type { MarkdownItOptions } from 'markdown-it';
  import MarkdownIt from 'markdown-it';
  import html2canvas from 'html2canvas';
  import { jsPDF } from 'jspdf';
  import hljs from 'highlight.js';
  import 'highlight.js/styles/github.css';

  const md = new MarkdownIt({
    html: true,
    linkify: true,
    typographer: true,
    highlight: function (str: string, lang: string): string {
      if (lang && hljs.getLanguage(lang)) {
        try {
          const result = hljs.highlight(str, { language: lang });
          return result.value;
        } catch (__) {}
      }
      return ''; // use external default escaping
    }
  } as MarkdownItOptions);

  // Get references to form elements
  const paperSizeSelect = document.getElementById('paperSize') as HTMLSelectElement;
  const marginsSelect = document.getElementById('margins') as HTMLSelectElement;
  const includeToCCheckbox = document.getElementById('includeToC') as HTMLInputElement;
  const pageNumbersCheckbox = document.getElementById('pageNumbers') as HTMLInputElement;
  const generateButton = document.getElementById('generatePDF') as HTMLButtonElement;
  const previewDiv = document.getElementById('preview') as HTMLDivElement;

  // Get margin size in mm
  function getMarginSize(margin: string): number {
    switch (margin) {
      case 'narrow':
        return 15;
      case 'wide':
        return 25;
      default:
        return 20;
    }
  }

  // Get page size in points (1 point = 0.3528 mm)
  function getPageSize(size: string): { width: number; height: number } {
    switch (size) {
      case 'letter':
        return { width: 216, height: 279 };
      case 'legal':
        return { width: 216, height: 356 };
      default: // a4
        return { width: 210, height: 297 };
    }
  }

  generateButton.addEventListener('click', async () => {
    try {
      generateButton.disabled = true;
      generateButton.textContent = 'Generating...';

      // Get the markdown content from storage
      const markdown = localStorage.getItem('markdown') || '';

      // Convert markdown to HTML
      const html = md.render(markdown);

      // Set the HTML content in the preview div
      previewDiv.innerHTML = html;

      // Get page settings
      const pageSize = getPageSize(paperSizeSelect.value);
      const margin = getMarginSize(marginsSelect.value);
      const addPageNumbers = pageNumbersCheckbox.checked;

      // Create PDF document
      const pdf = new jsPDF({
        unit: 'mm',
        format: [pageSize.width, pageSize.height],
        orientation: 'portrait'
      });

      // Capture the preview as canvas
      const canvas = await html2canvas(previewDiv, {
        scale: 2, // Higher scale for better quality
        useCORS: true, // Enable loading cross-origin images
        logging: false
      });

      // Calculate dimensions
      const imgWidth = pageSize.width - (margin * 2);
      const imgHeight = (canvas.height * imgWidth) / canvas.width;
      
      // Add content to PDF
      pdf.addImage(
        canvas.toDataURL('image/jpeg', 1.0),
        'JPEG',
        margin,
        margin,
        imgWidth,
        imgHeight
      );

      // Add page numbers if enabled
      if (addPageNumbers) {
        const totalPages = pdf.getNumberOfPages();
        for (let i = 1; i <= totalPages; i++) {
          pdf.setPage(i);
          pdf.setFontSize(10);
          pdf.text(
            `Page ${i} of ${totalPages}`,
            pageSize.width / 2,
            pageSize.height - (margin / 2),
            { align: 'center' }
          );
        }
      }

      // Save the PDF
      pdf.save('document.pdf');
    } catch (error) {
      console.error('PDF Generation Error:', error);
      alert('Failed to generate PDF. Please try again.');
    } finally {
      generateButton.disabled = false;
      generateButton.innerHTML = `<svg class="h-5 w-5 mr-2" viewBox="0 0 24 24"><path fill="currentColor" d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 16H5V5h14v14m-2-2H7v-1h10v1m0-3H7v-1h10v1m0-3H7V7h10v4Z"/></svg>Generate PDF`;
    }
  });
</script>
